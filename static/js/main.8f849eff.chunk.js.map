{"version":3,"sources":["components/Contacts/contact.js","components/Contacts/footer.js","components/Contacts/checkbox.js","components/Contacts/contacts.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","hidden","showInfo","setState","classNames","this","props","firstName","lastName","phone","gender","onClick","className","id","class","Component","Footer","Checkbox","changeMan","changeWoman","changeUnknown","type","onChange","name","defaultChecked","contacts","Contacts","value","man","woman","unknown","swap","event","target","contactsRender","r","male","female","unknowns","filter","curr","val","toLowerCase","indexOf","sort","a","b","map","index","key","placeholder","src","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f849eff.chunk.js","sourcesContent":["import React , { Component } from 'react';\r\n\r\nimport './contact.css';\r\n\r\nclass Contact extends Component{\r\n    state={\r\n        hidden:true\r\n    }\r\n\r\n    showInfo = ()=>{\r\n        this.setState({\r\n            hidden:!this.state.hidden\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        let classNames = \"info\";\r\n        let hidden = this.state.hidden;\r\n        if(!hidden){\r\n            classNames+=\"active\"\r\n        }\r\n       \r\n        const{firstName,lastName,phone,gender=\"not defind\"}=this.props;\r\n        const getMale=()=>{\r\n            if(gender===\"male\"){\r\n                return(<i class=\"fas fa-mars\"></i>);               \r\n            }else if(gender===\"female\"){\r\n                return(<i class=\"fas fa-venus\"></i>);\r\n            }else{\r\n                return(gender)\r\n            }\r\n        }\r\n        return( <>\r\n            <p onClick={this.showInfo}  className=\"name\">\r\n                <span>{firstName}</span> <span>{lastName}</span>\r\n                </p>\r\n                    <ul className = {classNames} id = \"h\">\r\n                        <li><span>Number:</span> {phone}</li>\r\n                        <li><span>Gender:</span> {getMale()}\r\n                        </li>\r\n                    </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './footer.css'\r\n\r\nfunction Footer(){\r\n    return(\r\n        <div className = \"footer\">\r\n            <div className=\"event\">\r\n                <i class=\"fas fa-star fa-lg\" id=\"s1\"></i>\r\n                <span>Обрані</span>\r\n            </div>\r\n            <div className=\"event\">\r\n                <i class=\"fas fa-clock fa-lg\" id=\"s2\"></i>\r\n                <span>Недавні</span>\r\n            </div>\r\n            <div className=\"event\" id=\"blue\">\r\n                <i class=\"fas fa-address-book fa-lg\" id=\"s3\"></i>\r\n                <span>Контакти</span>\r\n            </div>\r\n            <div className=\"event\">\r\n                <i class=\"fas fa-keyboard fa-lg\" id=\"s4\"></i>\r\n                <span>Клавіші</span>\r\n            </div>\r\n            <div className=\"event\">\r\n                <i class=\"fas fa-microphone fa-lg\" id=\"s5\"></i>\r\n                <span>Гол. пошта</span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './checkbox.css'\r\nclass Checkbox extends Component{\r\n    \r\n    render(){\r\n        const{changeMan,changeWoman,changeUnknown}=this.props;\r\n        return(\r\n            <div className=\"checkboxes\">\r\n                <div className=\"checkbox\">\r\n                    <input type=\"checkbox\" onChange={changeMan} name=\"male\" defaultChecked/>\r\n                    <i class=\"fas fa-mars\"></i>\r\n                </div>\r\n                <div className=\"checkbox\">\r\n                    <input type=\"checkbox\" onChange={changeWoman} name=\"female\" defaultChecked/>\r\n                    <i class=\"fas fa-venus\"></i>\r\n                </div>\r\n                <div className=\"checkbox\">\r\n                    <input type=\"checkbox\" onChange={changeUnknown} name=\"unknown\" defaultChecked/>\r\n                    <span>Unknown</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React , { Component } from 'react';\r\nimport Contact from './contact'\r\nimport './contacts.css';\r\nimport Footer from './footer'\r\nimport Chekbox from './checkbox';\r\n\r\nconst avatar = 'https://upload.wikimedia.org/wikipedia/commons/f/f4/User_Avatar_2.png';\r\n\r\nconst contacts = [{\r\n    firstName: \"Барней\",\r\n    lastName: \"Стинсовский\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n  }, {\r\n    firstName: \"Робин\",\r\n    lastName: \"Щербатская\",\r\n    phone: \"+380931460123\",\r\n    gender: \"female\"\r\n  }, {\r\n    firstName: \"Аномный\",\r\n    lastName: \"Анонимус\",\r\n    phone: \"+380666666666\"\r\n  }, {\r\n    firstName: \"Лилия\",\r\n    lastName: \"Олдровна\",\r\n    phone: \"+380504691254\",\r\n    gender: \"female\"\r\n  }, {\r\n    firstName: \"Маршэн\",\r\n    lastName: \"Эриксонян\",\r\n    phone: \"+380739432123\",\r\n    gender: \"male\"\r\n  }, {\r\n    firstName: \"Теодор\",\r\n    lastName: \"Мотсбэс\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n  }];\r\n  \r\nclass Contacts extends Component{\r\n  \r\n  state={\r\n    value:'',\r\n    contacts,\r\n    man:true,\r\n    woman:true,\r\n    unknown:true,\r\n    swap:false\r\n  }\r\n    onChange=(event)=>{\r\n      this.setState({\r\n        value:event.target.value\r\n      })\r\n    }\r\n\r\n    changeMan=()=>{\r\n      this.setState({\r\n          man:!this.state.man,\r\n          swap:true\r\n        }\r\n      )\r\n    }\r\n    changeWoman=()=>{\r\n      this.setState({\r\n          woman:!this.state.woman,\r\n          swap:true\r\n\r\n        }\r\n      )\r\n    }\r\n    changeUnknown=()=>{\r\n      this.setState({\r\n          unknown:!this.state.unknown,\r\n          swap:true\r\n\r\n        }\r\n      )\r\n    }\r\n    render(){\r\n        const filter=()=>{\r\n        let male=[];\r\n        let female=[];\r\n        let unknowns=[];\r\n        if(this.state.man){\r\n          male=this.state.contacts.filter(curr=>{\r\n            if(curr.gender===\"male\"){\r\n              return curr;\r\n            }\r\n          })\r\n        } if(this.state.woman){\r\n          female=this.state.contacts.filter(curr=>{\r\n            if(curr.gender===\"female\"){\r\n              return curr;\r\n            }\r\n          })\r\n        } if(this.state.unknown){\r\n          unknowns=this.state.contacts.filter(curr=>{\r\n              if(!curr.gender){\r\n                return curr;\r\n              }\r\n            })\r\n        }\r\n        return [...male,...female,...unknowns]\r\n      }\r\n      let r = this.state.contacts;\r\n      if(this.state.swap){\r\n        r = filter();\r\n      }\r\n      let contactsRender;\r\n      let data;\r\n    \r\n        if(this.state.value===''){\r\n          data=r;\r\n        }else{\r\n         data = r.filter((val) => {\r\n           let fullName = val.firstName+' '+val.lastName;\r\n                if(fullName.toLowerCase().indexOf(this.state.value.toLowerCase())!==-1){\r\n                return val;\r\n              }else if(val.phone.indexOf(this.state.value)>-1){\r\n             return val;\r\n           }\r\n         })\r\n      }\r\n    contactsRender = data\r\n    .sort((a,b)=>a.firstName[0]>b.firstName[0])\r\n    .map((curr,index)=>{\r\n        return(\r\n            <li key = {curr.firstName+index} className=\"elem\">\r\n               <Contact\r\n                    {...curr}\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n    \r\n        return(\r\n          <>\r\n          <div className=\"container\">\r\n              <div className=\"header clearfix\">\r\n                  <span>Групи</span>\r\n                  <i className=\"fas fa-plus \"></i>          \r\n              </div>\r\n              <h1>Контакти</h1>\r\n              <div className=\"search clearfix\">\r\n                  <button className=\"search__photo\">\r\n                      <i class=\"fas fa-search\"></i>\r\n                  </button>\r\n                  <input type=\"search\" placeholder=\"Search\" val={this.state.value} onChange={this.onChange}/>  \r\n              </div>\r\n              <Chekbox changeMan={this.changeMan} changeWoman={this.changeWoman} changeUnknown={this.changeUnknown} />\r\n              <div className=\"user\">\r\n                  <img src={avatar}/>\r\n                  <div className=\"user_info\">\r\n                      <h2>Олександр Пономаренко</h2>\r\n                      <p>Моя картка</p>\r\n                  </div>\r\n              </div>\r\n              <nav>\r\n                  <ul className= \"elements\">{contactsRender}</ul>\r\n              </nav>\r\n              <Footer/>\r\n          </div>\r\n         \r\n          </>\r\n        );\r\n    }\r\n}\r\nexport default Contacts;","import React, { Component } from 'react';\nimport Contacts from './components/Contacts/contacts'\nimport './App.css';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Contacts  /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}